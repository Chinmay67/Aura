doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Lipcare
    style   
        include ../../public/css/cart.css
  body
    include ../partials/chatbot.pug
    include ../partials/navbar.pug
    #slogan
      .search
        input.searchTerm(type='text', placeholder='What are you looking for?')
        button.searchButton(type='submit')
          img.lens(src='./images/search.png' )
    #line2
    #navbar
      .wrapper
        #logo
          | ,
          img(src='./images/aura.png', alt='')
        #items
          #item1 Home
          #item2 Skincare
          #item3 Haircare
          #item3 Facecare
    #line
    #back
      .animate
      .animate.second
      .animate.prt1
    .container
      header
        .lipcare
          h1 Lipcare Products
        .title PRODUCT LIST
        .icon-cart
          svg(aria-hidden='true', xmlns='http://www.w3.org/2000/svg', fill='none', viewBox='0 0 18 20')
            path(stroke='currentColor', stroke-linecap='round', stroke-linejoin='round', stroke-width='2', d='M6 15a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm0 0h8m-8 0-1-4m9 4a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-9-4h10l2-7H3m2 7L3 4m0 0-.792-3H1')
          span 0
      .listProduct
    .cartTab
      h1 Shopping Cart
      .listCart
      .btn
        button.close CLOSE
        button.checkOut Check Out
    script. 
        let listProductHTML = document.querySelector('.listProduct');
        let listCartHTML = document.querySelector('.listCart');
        let iconCart = document.querySelector('.icon-cart');
        let iconCartSpan = document.querySelector('.icon-cart span');
        let body = document.querySelector('body');
        let closeCart = document.querySelector('.close');
        let products = [];
        let cart = [];


        iconCart.addEventListener('click', () => {
            body.classList.toggle('showCart');
        })
        closeCart.addEventListener('click', () => {
            body.classList.toggle('showCart');
        })

            const addDataToHTML = () => {
            // remove datas default from HTML

                // add new datas
                if(products.length > 0) // if has data
                {
                    products.forEach(product => {
                        let newProduct = document.createElement('div');
                        newProduct.style.backgroundImage="url('backgroundImage')";
                        newProduct.dataset.id = product.id;
                        newProduct.classList.add('item');
                        newProduct.innerHTML = 
                        `<img src="${product.image}" alt="">
                        <h2>${product.name}</h2>
                        <div class="price">$${product.price}</div>
                        <button class="addCart">Add To Cart</button>`;
                        listProductHTML.appendChild(newProduct);
                    });
                }
            }
            listProductHTML.addEventListener('click', (event) => {
                let positionClick = event.target;
                if(positionClick.classList.contains('addCart')){
                    let id_product = positionClick.parentElement.dataset.id;
                    addToCart(id_product);
                }
            })
        const addToCart = (product_id) => {
            let positionThisProductInCart = cart.findIndex((value) => value.product_id == product_id);
            if(cart.length <= 0){
                cart = [{
                    product_id: product_id,
                    quantity: 1
                }];
            }else if(positionThisProductInCart < 0){
                cart.push({
                    product_id: product_id,
                    quantity: 1
                });
            }else{
                cart[positionThisProductInCart].quantity = cart[positionThisProductInCart].quantity + 1;
            }
            addCartToHTML();
            addCartToMemory();
        }
        const addCartToMemory = () => {
            localStorage.setItem('cart', JSON.stringify(cart));
        }
        const addCartToHTML = () => {
            listCartHTML.innerHTML = '';
            let totalQuantity = 0;
            if(cart.length > 0){
                cart.forEach(item => {
                    totalQuantity = totalQuantity +  item.quantity;
                    let newItem = document.createElement('div');
                    newItem.classList.add('item');
                    newItem.dataset.id = item.product_id;

                    let positionProduct = products.findIndex((value) => value.id == item.product_id);
                    let info = products[positionProduct];
                    listCartHTML.appendChild(newItem);
                    newItem.innerHTML = `
                    <div class="image">
                            <img src="${info.image}">
                        </div>
                        <div class="name">
                        ${info.name}
                        </div>
                        <div class="totalPrice">$${info.price * item.quantity}</div>
                        <div class="quantity">
                            <span class="minus"><</span>
                            <span>${item.quantity}</span>
                            <span class="plus">></span>
                        </div>
                    `;
                })
            }
            iconCartSpan.innerText = totalQuantity;
        }

        listCartHTML.addEventListener('click', (event) => {
            let positionClick = event.target;
            if(positionClick.classList.contains('minus') || positionClick.classList.contains('plus')){
                let product_id = positionClick.parentElement.parentElement.dataset.id;
                let type = 'minus';
                if(positionClick.classList.contains('plus')){
                    type = 'plus';
                }
                changeQuantityCart(product_id, type);
            }
        })
        const changeQuantityCart = (product_id, type) => {
            let positionItemInCart = cart.findIndex((value) => value.product_id == product_id);
            if(positionItemInCart >= 0){
                let info = cart[positionItemInCart];
                switch (type) {
                    case 'plus':
                        cart[positionItemInCart].quantity = cart[positionItemInCart].quantity + 1;
                        break;
                
                    default:
                        let changeQuantity = cart[positionItemInCart].quantity - 1;
                        if (changeQuantity > 0) {
                            cart[positionItemInCart].quantity = changeQuantity;
                        }else{
                            cart.splice(positionItemInCart, 1);
                        }
                        break;
                }
            }
            addCartToHTML();
            addCartToMemory();
        }

        const initApp = () => {
            // get data product
            fetch('./js/products.json')
            .then(response => response.json())
            .then(data => {
                products = data;
                addDataToHTML();

                // get data cart from memory
                if(localStorage.getItem('cart')){
                    cart = JSON.parse(localStorage.getItem('cart'));
                    addCartToHTML();
                }
            })
        }
        initApp();
